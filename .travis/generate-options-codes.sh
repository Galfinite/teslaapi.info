#!/bin/bash
# This script requires jq and pup

# Constants
export readonly TeslaBase="https://www.tesla.com"

export readonly MODEL_S_DESIGN_URL="/models/design"
export readonly MODELS_OPTIONS_FILE="model-s-options.md"
export readonly MODELS_TITLE="Model S Options"

export readonly MODEL_3_DESIGN_URL="/model3/design"
export readonly MODEL3_OPTIONS_FILE="model-3-options.md"
export readonly MODEL3_TITLE="Model 3 Options"

export readonly MODEL_X_DESIGN_URL="/modelx/design"
export readonly MODELX_OPTIONS_FILE="model-x-options.md"
export readonly MODELX_TITLE="Model X Options"

export readonly MODEL_Y_DESIGN_URL="/modely/design"
export readonly MODELY_OPTIONS_FILE="model-y-options.md"
export readonly MODELY_TITLE="Model Y Options"

export readonly TEMP_FILE="temp.html"
export readonly TEMP_FILE2="temp2.html"

###############################################################################
# Create options markdown for vehicle type
# Arguments:
#   ${1} - the design url to pull options from
#   ${2} - the markdown file output that will be written in the options dir
# Returns:
#   None
###############################################################################
get_options() {
  if [ -z "${1}" ]; then
    echo "No Design URL"
    exit 0
  fi
  
  if [ -z "${2}" ]; then
    echo "No Output File"
    exit 0
  fi

  if [ -z "${3}" ]; then
    echo "No Title"
    exit 0
  fi

  designURL="${1}"
  optionsFile="${2}"
  title="${3}"

  pushd .. 2>/dev/null
  pushd codes 2>/dev/null

  wget -q ${TeslaBase}${designURL} -O ${TEMP_FILE} >/dev/null 2>/dev/null
  availableLocales=`cat ${TEMP_FILE} | pup 'script:contains("window.tesla")' | awk -F'[{|}]' '/availableLocales/{print $4}'`
  LocaleCount=`echo {$availableLocales} | jq 'flatten | length'`

  echo "# ${title}" > ${optionsFile}
  echo $'\n' >> ${optionsFile}

  echo $'{% hint style="danger" %}' >> ${optionsFile}
  echo $'Do **not** manually edit this document. It is programmatically generated by [generate-options-codes.sh](https://github.com/galfinite/teslaapi.info/blob/master/.travis/generate-options-codes.sh).' >> ${optionsFile}
  echo $'{% endhint %}\n' >> ${optionsFile}

  i=0
  while [ $i -lt $LocaleCount ]
  do
	CurrLocale=`echo {$availableLocales} | jq --arg i $i "flatten | .[$i]" | sed "s/\"//g"`
    wget -q ${TeslaBase}/${CurrLocale}${designURL} -O ${TEMP_FILE} >/dev/null 2>/dev/null
#    JQUERY=`grep "jQuery.extend" ${TEMP_FILE}`
#    SIZE=`expr ${#JQUERY} - 33`
#    JSON_STRING=`echo ${JQUERY:31:${SIZE}}`

    echo $"### ${TeslaBase}/${CurrLocale}${designURL}" >> ${optionsFile}
    echo $'\n' >> ${optionsFile}
    echo $'```javascript' >> ${optionsFile}
	cat ${TEMP_FILE} | pup 'script:contains("window.tesla")' | sed -e 's=\\"=\~=g' -e 's=\\\/=\/=g' | grep -P 'DSServices":"[^"]*"' -o | grep -P '(?<=DSServices":")[^"]*' -o | sed -e 's=\~=\"=g' > ${TEMP_FILE2}
	Lexicon=`cat ${TEMP_FILE2} | jq '.KeyManager.keys.Lexicon[].key' | grep -P '[^"]*' -o`
    cat ${TEMP_FILE2} | jq --arg L $Lexicon '.[$L].options[] | "\(.code): \(.long_name)" ' >> ${optionsFile}
    echo $'\n```\n\n' >> ${optionsFile}

	i=`expr $i + 1`
  done

  rm ${TEMP_FILE}
  rm ${TEMP_FILE2}

  popd 2>/dev/null
  popd 2>/dev/null

}

###############################################################################
# Geneartes option code lists for the Model S and Model X
# Arguments:
#   None
# Returns:
#   None
###############################################################################
main() {
  get_options "${MODEL_S_DESIGN_URL}" "${MODELS_OPTIONS_FILE}" "${MODELS_TITLE}"
  get_options "${MODEL_3_DESIGN_URL}" "${MODEL3_OPTIONS_FILE}" "${MODEL3_TITLE}"
  get_options "${MODEL_X_DESIGN_URL}" "${MODELX_OPTIONS_FILE}" "${MODELX_TITLE}"
  get_options "${MODEL_Y_DESIGN_URL}" "${MODELY_OPTIONS_FILE}" "${MODELY_TITLE}"

}

main
